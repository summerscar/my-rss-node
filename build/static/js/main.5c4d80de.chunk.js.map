{"version":3,"sources":["components/index/index.js","utils/requset.js","components/video/index.js","components/login/index.js","components/header/index.js","page/AUTHCALLBACK/index.js","App.js","serviceWorker.js","index.js"],"names":["App","props","useAuth","isAuthenticated","login","videos","isloading","className","length","map","item","index","key","src","url","width","controls","preload","poster","to","pathname","title","state","data","style","fontSize","Date","pubdate","toLocaleString","tip","size","shape","block","onClick","more","paddingLeft","instance","axios","create","interceptors","request","use","localStorage","getItem","getTime","headers","Authorization","removeItem","error","Promise","reject","response","status","message","Video","location","useLocation","useState","translation","setTranslation","setIsloading","isAnotherloading","setIsAnotherloading","furigana","setFrigana","menu","value","grade","post","content","contentsnippet","then","res","WordList","Word","Surface","_text","Furigana","catch","e","console","log","Item","autoPlay","fontWeight","display","justifyContent","result","overlay","marginLeft","paddingTop","Login","logout","authResult","idTokenPayload","picture","marginRight","alt","name","paddingRight","icon","loading","Header","Layout","NewHeader","React","useEffect","type","color","float","AUTHCallback","handleAuthentication","Content","Footer","setVideos","offset","setOffset","get","items","setItem","accessToken","padding","exact","path","textAlign","href","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Provide","withRouter","navigate","history","push","auth0_domain","auth0_client_id","auth0_language","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c4d80de.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Spin, Button } from 'antd';\nimport {useAuth} from 'react-use-auth'\n\nfunction App(props) {\n  const { isAuthenticated, login } = useAuth();\n  const {videos, isloading} = props\n\n  return (\n    <div className=\"homeWrapper\">\n      {videos.length ? videos.map((item, index) => {\n        return (<div key={index} className=\"videoItem\">\n          <div>\n            <video\n              className=\"videoRadius\"\n              src={item.url} \n              width=\"100%\" \n              controls={true} \n              preload={index === 0 ? 'auto' : 'none'}\n              poster={'/annnews.jpg'}\n            />\n          </div>\n          <Link \n            className=\"link\"\n            to={{\n              pathname: \"/video/\" + item.title,\n              state: { data: item }\n            }}\n          >\n            {item.title}\n            <div  style={{fontSize: '12px'}}>{new Date(item.pubdate).toLocaleString()}</div>\n          </Link>\n        </div>\n      )}) : \n        isloading ? \n          <div className=\"loading\"><Spin tip=\"稍等一下哦\" size=\"large\"/></div> \n          : null}\n      {videos.length > 0 && (\n        <Button shape=\"round\" block onClick={ isAuthenticated() ? props.more : login }>\n          更多 \n          {isloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\nimport {message} from 'antd'\nlet instance = axios.create()\n\nfunction isAuthenticated () {\n  return !!(localStorage.getItem('useAuth:expires_at') && new Date().getTime() < localStorage.getItem('useAuth:expires_at'));\n}\n\ninstance.interceptors.request.use(request => {\n  if(isAuthenticated()) {\n    request.headers.Authorization = 'Bearer ' + localStorage.getItem('accessToken')\n    return request\n  }else {\n    localStorage.removeItem('accessToken')\n    return request\n  }\n}, error => {\n  return Promise.reject(error)\n})\n\ninstance.interceptors.response.use(response => {\n  return response\n}, error => {\n  if (error.response.status === 401) {\n    message.error('需要登录哦')\n  }\n  return Promise.reject(error)\n})\n\nexport default instance","import React, {useState, useRef} from 'react';\nimport {Button, Spin, Dropdown, Menu} from 'antd'\nimport axios from './../../utils/requset';\nimport { useLocation } from \"react-router-dom\";\n\nfunction Video(props) {\n  let location = useLocation();\n  let [translation, setTranslation] = useState()\n  let data = location.state.data\n  let [isloading, setIsloading] = useState(false)\n  let [isAnotherloading, setIsAnotherloading] = useState(false)\n  let [furigana, setFrigana] = useState()\n\n  function getTranslate () {\n    setIsloading(true)\n    axios.post(`/api/auth/translate`, { content: data.contentsnippet })\n      .then(res => {\n        setTranslation(res.data.result)\n        setIsloading(false)\n      }).catch(e => {\n        console.log(e)\n        setIsloading(false)\n      })\n  }\n\n  function getfurigana (grade) {\n    if (grade === '0') {\n      setFrigana(null)\n      return\n    }\n    setIsAnotherloading(true)\n    axios.post(`/api/auth/furigana`, { content: data.contentsnippet, grade })\n      .then(res => {\n        setFrigana(\n          res.data.WordList.Word.map((item, index) => (\n            <ruby key={index}>\n              {item.Surface._text}\n              {item.Furigana ? (<><rp>(</rp><rt>{item.Furigana._text}</rt><rp>)</rp></>) : null}\n            </ruby>\n          ))\n        )\n        setIsAnotherloading(false)\n      }).catch(e => {\n        console.log(e)\n        setIsAnotherloading(false)\n      })\n  }\n\n  function getMecab () {\n    setIsAnotherloading(true)\n    axios.post(`/api/auth/mecab`, { content: data.contentsnippet })\n      .then(res => {\n        setTranslation(res.data.result.join(' · '))\n        setIsAnotherloading(false)\n      }).catch(e => {\n        console.log(e)\n        setIsAnotherloading(false)\n      })\n  }\n  function handleMenuClick (value) {\n    getfurigana(value.key)\n  }\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"0\">恢复</Menu.Item>\n      <Menu.Item key=\"8\">一般向け</Menu.Item>\n      <Menu.Item key=\"1\">小学1年生</Menu.Item>\n      <Menu.Item key=\"2\">小学2年生</Menu.Item>\n      <Menu.Item key=\"3\">小学3年生</Menu.Item>\n      <Menu.Item key=\"4\">小学4年生</Menu.Item>\n      <Menu.Item key=\"5\">小学5年生</Menu.Item>\n      <Menu.Item key=\"6\">小学6年生</Menu.Item>\n      <Menu.Item key=\"7\">小学7年生</Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"videoWrapper\">\n      <div>\n        <video src={data.url} width=\"100%\" controls={true} autoPlay={true}/>\n      </div>\n      <div className=\"contentWrapper\">\n        <div style={{fontSize: '14px', fontWeight: 'bold'}}>{data.title}</div>\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n          <div>\n            <Button size=\"small\" onClick={getTranslate}>\n              翻译\n              {isloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n            </Button>\n            <Dropdown overlay={menu}>\n              <Button size=\"small\" style={{marginLeft: '0.2rem'}}>\n                振り仮名  {isAnotherloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n              </Button>\n            </Dropdown>\n            {/* <Button size=\"small\" onClick={getMecab} style={{marginLeft: '0.2rem'}}>\n              分词\n              {isAnotherloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n            </Button> */}\n          </div>\n          <div style={{fontSize: '12px'}}>{new Date(data.pubdate).toLocaleString()}</div>\n        </div>\n        <div style={{paddingTop: '1rem'}}>{furigana || data.contentsnippet}</div>\n        <div style={{paddingTop: '1rem'}}>{translation}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Video;\n","import React from 'react'\nimport {  Button } from 'antd';\nimport { useAuth } from \"react-use-auth\";\n\n\nconst Login = () => {\n  const { isAuthenticated, login, logout, authResult } = useAuth();\n  console.log('user: ', authResult)\n\n  function logoutAction() {\n    localStorage.removeItem('accessToken')\n    logout()\n  }\n  \n  if (isAuthenticated()) {\n    return (\n      <div>\n        {authResult && \n          (\n            authResult.idTokenPayload.picture ? \n              <img style={{marginRight: '0.5rem'}} width=\"20px\" src={authResult.idTokenPayload.picture} alt={authResult.idTokenPayload.name}/> : \n              <span style={{paddingRight: '0.5rem'}}>{authResult.idTokenPayload.name}</span>\n          )\n        }\n        <Button\n          size=\"small\"\n          icon=\"poweroff\"\n          loading={!authResult}\n          onClick={logoutAction}\n        >\n        </Button>\n      </div>);\n  } else {\n    return <Button onClick={login}>登录</Button>;\n  }\n};\n\nexport default Login","import { Link, useLocation } from \"react-router-dom\";\nimport React from 'react'\nimport { Layout, Icon } from 'antd';\nimport Login from '../login'\nconst { Header } = Layout;\n\nconst NewHeader = () => {\n  let location = useLocation();\n\n  React.useEffect(() => {\n    console.log(location)\n  }, [location]);\n\n  return (\n    <Header>\n      {location.pathname !== '/' ? (\n        <Link\n          to={{ pathname: '/' }}\n        >\n          <Icon type=\"left\" style={{ fontSize: '20px', color: 'white' }} />\n          <div style={{display: 'inline', float: 'right'}}>\n            <Login/>\n          </div>\n        </Link>\n      ) : <div style={{ color: 'white' }}>\n        ANN NEWS\n        <div style={{display: 'inline', float: 'right'}}>\n          <Login/>\n        </div>\n      </div>\n      }\n    </Header>\n  )\n}\n\nexport default NewHeader\n","import React, { useEffect } from \"react\";\nimport { useAuth } from \"react-use-auth\";\n\nconst AUTHCallback = () => {\n  const { handleAuthentication } = useAuth();\n  useEffect(() => {\n    handleAuthentication();\n  }, [handleAuthentication]);\n  return (\n    <h1>\n      This is the auth callback page, you should be redirected immediately.\n    </h1>\n  );\n};\n\nexport default AUTHCallback;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Layout } from 'antd';\nimport Index from './components/index';\nimport Video from './components/video';\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from './components/header'\nimport axios from './utils/requset';\nimport AUTHCallback from \"./page/AUTHCALLBACK\";\nimport {useAuth} from 'react-use-auth'\nconst OFFSET = 4\nconst { Content, Footer } = Layout;\n\nfunction App(props) {\n  const [videos, setVideos] = useState([])\n  const [offset, setOffset] = useState(0)\n  const [isloading, setIsloading] = useState(false)\n  const { authResult, isAuthenticated } = useAuth();\n\n  useEffect(() => {\n      if (isAuthenticated()) {\n        setIsloading(true)\n        axios.get(`/api/auth/youtube/ANNnewsCH?offset=${offset}`).then(res => {\n          console.log(res.data)\n          setVideos(videos => [...videos, ...res.data.items])\n          setIsloading(false)\n        })\n      } else {\n        if (!authResult) {\n          setIsloading(true)\n          axios.get(`/api/youtube/ANNnewsCH`).then(res => {\n            console.log(res.data)\n            setVideos(res.data.items)\n            setIsloading(false)\n          })\n        } \n      }\n    }, [offset])\n\n    useEffect(() => {\n      authResult && localStorage.setItem('accessToken', authResult.accessToken)\n    }, [authResult])\n  return (\n    <>\n      <Layout className=\"layout\">\n        <Header></Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Index videos={videos} more={() => setOffset(offset => offset + OFFSET)} isloading={isloading}/>\n            </Route>\n            <Route path=\"/video/:title\">\n              <Video />\n            </Route>\n          </Switch>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>ANN News by <a href=\"https://github.com/summerscar/my-rss-node\">summerscar</a></Footer>\n      </Layout>\n      <Route path=\"/auth0_callback\" component={AUTHCallback} />\n    </>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, withRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"react-use-auth\";\nimport * as serviceWorker from './serviceWorker';\n\nconst Provide = withRouter((props) => (\n  <AuthProvider\n    navigate={props.history.push}\n    auth0_domain=\"dev-ymyh-0n9.auth0.com\"\n    auth0_client_id=\"U9Ypez6umr0NvVSRxPfcTwEgj8WGIz6p\"\n    auth0_language=\"zh\"\n  >\n    <App/>\n  </AuthProvider>\n))\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provide/>\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}