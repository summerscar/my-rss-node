{"version":3,"sources":["components/index/index.js","components/video/index.js","components/login/index.js","components/header/index.js","page/AUTHCALLBACK/index.js","App.js","serviceWorker.js","index.js"],"names":["App","props","useAuth","isAuthenticated","login","videos","isloading","className","length","map","item","index","key","src","url","width","controls","preload","poster","to","pathname","title","state","data","style","fontSize","Date","pubdate","toLocaleString","tip","size","shape","block","onClick","more","paddingLeft","Video","accessToken","localStorage","getItem","location","useLocation","useState","translation","setTranslation","setIsloading","autoPlay","fontWeight","display","justifyContent","axios","post","content","contentsnippet","headers","Authorization","then","res","result","catch","e","console","log","message","info","paddingTop","Login","logout","authResult","idTokenPayload","picture","marginRight","alt","name","paddingRight","icon","loading","removeItem","Header","Layout","NewHeader","React","useEffect","type","color","float","AUTHCallback","handleAuthentication","Content","Footer","setVideos","offset","setOffset","get","items","setItem","padding","exact","path","textAlign","href","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","Provide","withRouter","navigate","history","push","auth0_domain","auth0_client_id","auth0_language","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4291c0f5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Spin, Button } from 'antd';\nimport {useAuth} from 'react-use-auth'\n\nfunction App(props) {\n  const { isAuthenticated, login } = useAuth();\n  const {videos, isloading} = props\n\n  return (\n    <div className=\"homeWrapper\">\n      {videos.length ? videos.map((item, index) => {\n        return (<div key={index} className=\"videoItem\">\n          <div>\n            <video \n              src={item.url} \n              width=\"100%\" \n              controls={true} \n              preload={index === 0 ? 'auto' : 'none'}\n              poster={'/annnews.jpg'}\n            />\n          </div>\n          <Link \n            className=\"link\"\n            to={{\n              pathname: \"/video/\" + item.title,\n              state: { data: item }\n            }}\n          >\n            {item.title}\n            <div  style={{fontSize: '12px'}}>{new Date(item.pubdate).toLocaleString()}</div>\n          </Link>\n        </div>\n      )}) : \n        isloading ? \n          <div className=\"loading\"><Spin tip=\"稍等一下哦\" size=\"large\"/></div> \n          : null}\n      {videos.length > 0 && (\n        <Button shape=\"round\" block onClick={ isAuthenticated() ? props.more : login }>\n          更多 \n          {isloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react';\nimport {Button, Spin, message} from 'antd'\nimport axios from 'axios'\nimport { useLocation } from \"react-router-dom\";\n\nfunction Video(props) {\n  const accessToken = localStorage.getItem('accessToken')\n  let location = useLocation();\n  let [translation, setTranslation] = useState()\n  let data = location.state.data\n  let [isloading, setIsloading] = useState(false)\n  let [isAnotherloading, setIsAnotherloading] = useState(false)\n\n  function getTranslate () {\n    if (!accessToken) {\n      message.info('你需要登录哦')\n      return\n    }\n    setIsloading(true)\n    axios.post(`/api/auth/translate`,\n      { content: data.contentsnippet },\n      {\n        headers: {Authorization: `Bearer ${accessToken}`},\n        data: { content: data.contentsnippet }\n      })\n      .then(res => {\n        setTranslation(res.data.result)\n        setIsloading(false)\n      }).catch(e => {\n        console.log(e)\n        setIsloading(false)\n      })\n  }\n\n  function getMecab () {\n    if (!accessToken) {\n      message.info('你需要登录哦')\n      return\n    }\n    setIsAnotherloading(true)\n    axios.post(`/api/auth/mecab`,\n      { content: data.contentsnippet },\n      {\n        headers: {Authorization: `Bearer ${accessToken}`}\n      })\n      .then(res => {\n        setTranslation(res.data.result.join(' · '))\n        setIsAnotherloading(false)\n      }).catch(e => {\n        console.log(e)\n        setIsAnotherloading(false)\n      })\n  }\n\n  return (\n    <div className=\"videoWrapper\">\n      <div>\n        <video src={data.url} width=\"100%\" controls={true} autoPlay={true}/>\n      </div>\n      <div className=\"contentWrapper\">\n        <div style={{fontSize: '14px', fontWeight: 'bold'}}>{data.title}</div>\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n          <div>\n            <Button size=\"small\" onClick={getTranslate}>\n              翻译\n              {isloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n            </Button>\n            {/* <Button size=\"small\" onClick={getMecab} style={{marginLeft: '0.2rem'}}>\n              分词\n              {isAnotherloading && <Spin size=\"small\" style={{paddingLeft: '0.5rem'}}/>}\n            </Button> */}\n          </div>\n          <div style={{fontSize: '12px'}}>{new Date(data.pubdate).toLocaleString()}</div>\n        </div>\n        <div style={{paddingTop: '1rem'}}>{data.contentsnippet}</div>\n        <div style={{paddingTop: '1rem'}}>{translation}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Video;\n","import React from 'react'\nimport {  Button } from 'antd';\nimport { useAuth } from \"react-use-auth\";\n\n\nconst Login = () => {\n  const { isAuthenticated, login, logout, authResult } = useAuth();\n  console.log('user: ', authResult)\n\n  function logoutAction() {\n    localStorage.removeItem('accessToken')\n    logout()\n  }\n  \n  if (isAuthenticated()) {\n    return (\n      <div>\n        {authResult && \n          (\n            authResult.idTokenPayload.picture ? \n              <img style={{marginRight: '0.5rem'}} width=\"20px\" src={authResult.idTokenPayload.picture} alt={authResult.idTokenPayload.name}/> : \n              <span style={{paddingRight: '0.5rem'}}>{authResult.idTokenPayload.name}</span>\n          )\n        }\n        <Button\n          size=\"small\"\n          icon=\"poweroff\"\n          loading={!authResult}\n          onClick={logoutAction}\n        >\n        </Button>\n      </div>);\n  } else {\n    return <Button onClick={login}>登录</Button>;\n  }\n};\n\nexport default Login","import { Link, useLocation } from \"react-router-dom\";\nimport React from 'react'\nimport { Layout, Icon } from 'antd';\nimport Login from '../login'\nconst { Header } = Layout;\n\nconst NewHeader = () => {\n  let location = useLocation();\n\n  React.useEffect(() => {\n    console.log(location)\n  }, [location]);\n\n  return (\n    <Header>\n      {location.pathname !== '/' ? (\n        <Link\n          to={{ pathname: '/' }}\n        >\n          <Icon type=\"left\" style={{ fontSize: '20px', color: 'white' }} />\n        </Link>\n      ) : <div style={{ color: 'white' }}>\n        ANN NEWS\n        <div style={{display: 'inline', float: 'right'}}>\n          <Login/>\n        </div>\n      </div>\n      }\n    </Header>\n  )\n}\n\nexport default NewHeader\n","import React, { useEffect } from \"react\";\nimport { useAuth } from \"react-use-auth\";\n\nconst AUTHCallback = () => {\n  const { handleAuthentication } = useAuth();\n  useEffect(() => {\n    handleAuthentication();\n  }, [handleAuthentication]);\n  return (\n    <h1>\n      This is the auth callback page, you should be redirected immediately.\n    </h1>\n  );\n};\n\nexport default AUTHCallback;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Layout } from 'antd';\nimport Index from './components/index';\nimport Video from './components/video';\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from './components/header'\nimport axios from 'axios';\nimport AUTHCallback from \"./page/AUTHCALLBACK\";\nimport {useAuth} from 'react-use-auth'\nconst OFFSET = 4\nconst { Content, Footer } = Layout;\n\nfunction App(props) {\n  const accessToken = localStorage.getItem('accessToken')\n  const [videos, setVideos] = useState([])\n  const [offset, setOffset] = useState(0)\n  const [isloading, setIsloading] = useState(false)\n  const { authResult } = useAuth();\n\n  useEffect(() => {\n      if (accessToken) {\n        setIsloading(true)\n        axios.get(`/api/auth/youtube/ANNnewsCH?offset=${offset}`, {headers: {Authorization: `Bearer ${accessToken}`}}).then(res => {\n          console.log(res.data)\n          setVideos(videos => [...videos, ...res.data.items])\n          setIsloading(false)\n        })\n      } else {\n        if (!authResult) {\n          setIsloading(true)\n          axios.get(`/api/youtube/ANNnewsCH`).then(res => {\n            console.log(res.data)\n            setVideos(res.data.items)\n            setIsloading(false)\n          })\n        } \n      }\n    }, [offset])\n\n    useEffect(() => {\n      authResult && localStorage.setItem('accessToken', authResult.accessToken)\n    }, [authResult])\n  return (\n    <>\n      <Layout className=\"layout\">\n        <Header></Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Index videos={videos} more={() => setOffset(offset => offset + OFFSET)} isloading={isloading}/>\n            </Route>\n            <Route path=\"/video/:title\">\n              <Video />\n            </Route>\n          </Switch>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>ANN News by <a href=\"https://github.com/summerscar/my-rss-node\">summerscar</a></Footer>\n      </Layout>\n      <Route path=\"/auth0_callback\" component={AUTHCallback} />\n    </>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, withRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"react-use-auth\";\nimport * as serviceWorker from './serviceWorker';\n\nconst Provide = withRouter((props) => (\n  <AuthProvider\n    navigate={props.history.push}\n    auth0_domain=\"dev-ymyh-0n9.auth0.com\"\n    auth0_client_id=\"U9Ypez6umr0NvVSRxPfcTwEgj8WGIz6p\"\n    auth0_language=\"zh\"\n  >\n    <App/>\n  </AuthProvider>\n))\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provide/>\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}